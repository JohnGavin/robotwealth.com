// For format details, see https://aka.ms/vscode-remote/devcontainer.json or the definition README at
// https://github.com/microsoft/vscode-dev-containers/tree/master/containers/docker-existing-dockerfile
{
  "name": "devcontainer-project",
  "dockerFile": "Dockerfile",
  "context": "${localWorkspaceFolder}",
  "build": {
    "args": {
      "USER_UID": "${localEnv:USER_UID}",
      "USER_GID": "${localEnv:USER_GID}"
    },
  },

  // run arguments passed to docker
  "runArgs": [
    "--security-opt", "label=disable"
  ],

  "containerEnv": {
     // extensions to preload before other extensions
    "PRELOAD_EXTENSIONS": "arrterian.nix-env-selector"
  },

   // disable command overriding and updating remote user ID
  "overrideCommand": false,
  "userEnvProbe": "loginShell",
  "updateRemoteUserUID": false,

  // build development environment on creation, make sure you already have shell.nix
  "onCreateCommand": "nix-shell --command 'echo done building nix dev environment'",

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    // select nix environment
    "arrterian.nix-env-selector"

    // extra extensions
    //"fsevenm.run-it-on",
    //"jnoortheen.nix-ide",
    //"ms-python.python"
  ],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [],

	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				//"r.rterm.linux": "/usr/local/bin/radian",
				"r.bracketedPaste": true,
				"r.plot.useHttpgd": true,
				"[r]": {
					"editor.wordSeparators": "`~!@#%$^&*()-=+[{]}\\|;:'\",<>/?"
				}
			},


			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
      			"dbaeumer.vscode-eslint",
				"reditorsupport.r",
				"rdebugger.r-debugger"
			]
		}
	},

	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "bash" 
	//"R --vanilla",

}


// {
//   "image":"mcr.microsoft.com/devcontainers/base:alpine",
//   "features": {
//     "ghcr.io/devcontainers/features/nix:1": {
//       "multiUser": true,
//       "version": "latest"
//     }
//   },

// {
//   "image": "mcr.microsoft.com/devcontainers/base:alpine",
//   "features": {
//     "ghcr.io/devcontainers/features/nix:1": {
//       "multiUser": true,
//       "version": "latest",
//       // Needed for flakes & nix-direnv:
//       "extraNixConfig": "experimental-features = nix-command flakes,keep-outputs = true,keep-derivations = true"
//     }
//   },
//   "onCreateCommand": {
//     // Set up global gitignore for direnv.
//     "init-git": "mkdir -p ~/.config/git && printf '.direnv/\\n.envrc\\n' > ~/.config/git/ignore && git config --global core.excludesfile ~/.config/git/ignore",
//     // Install, set up and allow direnv in workspace.
//     "install-direnv": "nix profile install nixpkgs#direnv nixpkgs#nix-direnv && mkdir -p ~/.config/direnv && echo 'source $HOME/.nix-profile/share/nix-direnv/direnvrc' >> ~/.config/direnv/direnvrc && cp .envrc.recommended .envrc && direnv allow",
//     // Run `print-dev-env` to build `devShells.${system}.default`.
//     "build-dev-env": "nix print-dev-env > /dev/null"
//   },
//   "customizations": {
//     "vscode": {
//       "extensions": [
//         // Inject direnv variables into VS Code terminals and tasks:
//         "mkhl.direnv",
//         // Support for `.nix` files:
//         "jnoortheen.nix-ide"
//       ]
//     }
//   }
// }


// {
//   "build": { "dockerfile": "Dockerfile" },

// // For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// // https://github.com/microsoft/vscode-dev-containers/tree/v0.245.0/containers/r
// // {
// // 	"name": "R (Community)",
// // 	"build": {
// // 		"dockerfile": "Dockerfile",
// // 		"args": {
// // 			//"DISPLAY": "192.168.55.101" //,
// // 			"runArgs": ["--privileged"] // ["--userns=host"] 
// // 		//   //"DEV_PROJ": "proj",
// // 		//   //"DEV": "dev",
// // 		//   //"PROJ": "proj"
// // 		// 	// Update VARIANT to pick a R version: 4, 4.2, 4.1, 4.0
// // 		// 	//"VARIANT": "4.2",
// // 		// 	// Start with a minimal image (rocker/r-ver) or a expanded image.
// // 		// 	// See more details about rocker/r-ver's derived images: https://github.com/rocker-org/rocker-versioned2
// // 		// 	//"BASE_IMAGE": "rocker/tidyverse",
// // 		// 	// Options
// // 		// 	//"ENABLE_JUPYTER": "true",
// // 		// 	//"UPGRADE_PACKAGES": "true"
// // 		}
// // 	// },
// // }}

// 	// Use 'forwardPorts' to make a list of ports inside the container available locally.
// 	// "forwardPorts": [],
//  	//"forwardPorts": [3000]

// 	// Use 'postCreateCommand' to run commands after the container is created.
// 	// "postCreateCommand": "R --vanilla",

// 	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
// 	// "remoteUser": "rstudio"
//}
